#!/bin/bash

mkdir -p \
			customfiles/home/user/.kube \
			customfiles/root/.kube \
			customfiles/etc/kubernetes

tftpget() {
	echo "fetching ${1}..."
	# Fetch the file
  tftp 10.0.0.1 -c get kubernetes/"${1}"
	# Separate the relative path from the filename
	FILEPATH=$(echo "${1}" | sed 's/\/[^/]*$//')
	# If there is a '/' anywhere in the relative path of the file,
	if [[ "${FILEPATH}" != "${1}" ]]; then
		FILENAME=$(echo "${1}" | awk -F / '{print $NF}')
		mkdir -p "${FILEPATH}"
		mv "${FILENAME}" "${1}"
	fi
	echo "done"
}


# Helm
##########################################################################################
HELM_VERSION=$(jq < env.json -r '.versions.helm')
tftpget downloads/helm-v"${HELM_VERSION}"-linux-amd64.tar.gz
mkdir helm
tar -xzf downloads/helm-v"${HELM_VERSION}"-linux-amd64.tar.gz -C helm
chmod 0751 helm/linux-amd64/helm
cp helm/linux-amd64/helm customfiles/usr/local/bin
rm -rf helm

# Kubeadm init
##########################################################################################
tftpget templates/kubeadm-config.yaml.j2
j2 -f json templates/kubeadm-config.yaml.j2 env.json > customfiles/etc/kubernetes/kubeadm-config.yaml
kubeadm init --config customfiles/etc/kubernetes/kubeadm-config.yaml 2>&1 > /var/log/kubeadm_init_output.txt

# Copy kubectl config
cp /etc/kubernetes/admin.conf customfiles/home/user/.kube/config
chown user:user customfiles/home/user/.kube/config
cp /etc/kubernetes/admin.conf customfiles/root/.kube/config

# Make token and join command for worker nodes
kubeadm token create --ttl 0 --print-join-command > customfiles/etc/kubernetes/join-command
chmod 0600 customfiles/etc/kubernetes/join-command

# Copy all files from customfiles into system folders
rsync -rp customfiles/ /

# Do stuff until heard from all worker nodes?

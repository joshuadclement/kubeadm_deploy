#!/bin/bash

echo "Backing up tls secrets if they exist"
kubectl get secret --all-namespaces --field-selector type=kubernetes.io/tls -o yaml | yq '.items[] | split_doc' > backup_certs.yaml
sed -i '/last-applied-configuration/d' backup_certs.yaml
sed -i '/{"apiVersion":/d' backup_certs.yaml
sed -i '/resourceVersion/d' backup_certs.yaml
sed -i '/uid/d' backup_certs.yaml
sed -i '/creationTimestamp/d' backup_certs.yaml

echo "Backed up certs to backup_certs.yaml.
Ensure this file exists in secrets/backup_certs.yaml to avoid re-querying letsencrypt if rebuilding the cluster."

HOSTNAME=$(hostname -s)
# Check whether there is a cluster running
kubectl get nodes | grep "${HOSTNAME}"
if [[ "$?" == 0 ]]; then
	# Check whether all worker nodes have been removed, wait until they are
	while true; do
		NODE_COUNT=$(kubectl get nodes | wc -l)
		if [[ $NODE_COUNT < 3 ]]; then
			echo "No worker nodes left, continue to reset control plane."
			break
		else
			echo "Waiting for worker nodes to be deleted before resetting control plane. Sleeping for 10 seconds."
			sleep 10
		fi
	done

	kubeadm reset
else
	echo "The control plane isn't running, continuing to clean up files"
fi

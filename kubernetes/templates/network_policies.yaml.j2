##########################################################################
# Define network policies for the sciencedata and sciencedata-dev namespaces
# NB kubernetes networkPolicies are whitelist only. A rule must be made
# to match all desired types of traffic
##########################################################################

{% for ns in ['sciencedata', 'sciencedata-dev'] %}
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: sciencedata-network
  namespace: {{ ns }}
spec:
  policyTypes:
    - Egress
    - Ingress
  egress:
    - to:
      # Allow egress traffic to anywhere outside the cluster
      - ipBlock:
          cidr: 0.0.0.0/0
          except:
            - {{ trusted_network_cidr }}
            - {{ cluster_range }}
      # Allow egress to the dns server
      # (the only thing in the cluster that should be reachable from user pods)
      - namespaceSelector:
          matchLabels:
            kubernetes.io/metadata.name: kube-system
        podSelector:
          matchLabels:
            k8s-app: kube-dns
  ingress:
    - from:
      # Allow ingress from the reverse proxy, nowhere else
      - namespaceSelector:
          matchLabels:
            name: ingress-nginx
    - ports:
      # Allow ssh traffic (reaches pods via an exposed nodePort service, which forwards to port 22)
      - port: 22
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: sciencedata-allow-to-k8s-apiserver
  namespace: {{ ns }}
spec:
  policyTypes:
    - Egress
  # Only the user-pods-backend pod should be able to reach the k8s apiserver
  podSelector:
    matchLabels:
      app: user-pods-backend
  egress:
    - to:
      # the apiserver is accessed by the host nodes IP address,
      # which will lie in the trusted cluster subnet
      - ipBlock:
          cidr: {{ trusted_nodes_cidr }}
---
{% endfor %}

##########################################################################
# Block all traffic besides that from the reverse proxy for all ns where
# this is the expected behavior (i.e. just one thing that sits behind the
# reverse proxy)
##########################################################################

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: reverse-proxy-only
  namespace: docker-registry
spec:
  policyTypes:
    - Egress
    - Ingress
  egress: []
  ingress:
    - from:
      # Allow ingress from the reverse proxy, nowhere else
      - namespaceSelector:
          matchLabels:
            name: ingress-nginx
---

##########################################################################
# The ingress controller (reverse proxy) should have only ingress from
# outside the cluster and egress to within the cluster
##########################################################################

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: ingress-controller
  namespace: ingress-nginx
spec:
  policyTypes:
    - Egress
    - Ingress
  egress:
    - to:
        - namespaceSelector: {}
        - ipBlock:
            cidr: {{ trusted_nodes_cidr }}
  ingress:
    - from:
        # Allow from any IP addresses except for pods
        # Note that pods can still reach the ingress controller
        # via the node IP port 80/443, since this policy doesnt
        # affect the host network
        - ipBlock:
            cidr: 0.0.0.0/0
            except:
              - {{ cluster_range }}
---

#!/bin/bash

mkdir -p \
			customfiles/home/user/.kube \
			customfiles/root/.kube \
			customfiles/etc/kubernetes/helm_values

tftpget() {
	if [[ -f "${1}" ]]; then
		echo "${1} Exists locally, continuing..."
	else
		echo "fetching ${1} from the tftp server..."
		# Fetch the file
		tftp 10.0.0.1 -c get kubernetes/"${1}"
		# Separate the relative path from the filename
		FILEPATH=$(echo "${1}" | sed 's/\/[^/]*$//')
		# If there is a '/' anywhere in the relative path of the file,
		if [[ "${FILEPATH}" != "${1}" ]]; then
			FILENAME=$(echo "${1}" | awk -F / '{print $NF}')
			mkdir -p "${FILEPATH}"
			mv "${FILENAME}" "${1}"
		fi
		echo "done"
	fi
}


# Helm
##########################################################################################
HELM_VERSION=$(jq < env.json -r '.versions.helm')
tftpget downloads/helm-v"${HELM_VERSION}"-linux-amd64.tar.gz
mkdir helm
tar -xzf downloads/helm-v"${HELM_VERSION}"-linux-amd64.tar.gz -C helm
chmod 0751 helm/linux-amd64/helm
cp helm/linux-amd64/helm customfiles/usr/local/bin
rm -rf helm

# Kubeadm init
##########################################################################################
tftpget templates/kubeadm-config.yaml.j2
j2 -f json templates/kubeadm-config.yaml.j2 env.json > customfiles/etc/kubernetes/kubeadm-config.yaml
kubeadm init --config customfiles/etc/kubernetes/kubeadm-config.yaml 2>&1

# Copy kubectl config
cp /etc/kubernetes/admin.conf customfiles/home/user/.kube/config
chown user:user customfiles/home/user/.kube/config
cp /etc/kubernetes/admin.conf customfiles/root/.kube/config
rsync -rp customfiles/ /

# Install calico
CALICO_VERSION=$(jq < env.json -r '.versions.calico')
helm repo add projectcalico https://docs.tigera.io/calico/charts
tftpget templates/calico_values.yaml.j2
j2 -f json templates/calico_values.yaml.j2 env.json > customfiles/etc/kubernetes/helm_values/calico_values.yaml
kubectl create namespace tigera-operator
helm install calico projectcalico/tigera-operator --version v"${CALICO_VERSION}" -f customfiles/etc/kubernetes/helm_values/calico_values.yaml --namespace tigera-operator

tftpget downloads/calicoctl-linux-amd64
chmod +x downloads/calicoctl-linux-amd64
cp downloads/calicoctl-linux-amd64 customfiles/usr/local/bin/calicoctl


# Make token and join command for worker nodes
kubeadm token create --ttl 0 --print-join-command > customfiles/etc/kubernetes/join-command
chmod 0600 customfiles/etc/kubernetes/join-command


# Copy all files from customfiles into system folders
rsync -rp customfiles/ /
# At this point, worker nodes will be able to join the cluster by copying the join command via ssh
